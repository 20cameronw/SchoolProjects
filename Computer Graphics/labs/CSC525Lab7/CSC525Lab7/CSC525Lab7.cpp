/*=================================================================
COURSE: CSC 525/625, assignment 07
PROGRAMMERS: Venkatesh Pagadala, Ravi Teja Pilli, Cameron Weston, Vivek Kovi, Pranay Kalluri
LAST MODIFIED DATE: 10/8/2022
DESCRIPTION: This program is to show the head scratching man bitmap
FILES: Lab007.cpp
IDE/COMPILER: Microsoft Visual Studio 2019
INSTRUCTION FOR COMPILATION AND EXECUTION:
1. Double click on Lab007.sln (the solution file in my VS project) to OPEN the project
2. Press Ctrl+F7 to COMPILE
3. Press Ctrl+F5 to EXECUTE
=================================================================*/
#include <iostream>
#include <GL/glut.h> 


//prototypes
void myInit();
void myDisplayCallback();
void drawAxis();
void displayBitmap();

//global variables
GLubyte bitmap[] = {
0x01, 0xc0, 0x00, 0x00, 0x03, 0xf0, 0x40, 0x00, 0x03, 0xff, 0xc0, 0x00, 0x00,
0x7f, 0xc0, 0x00,
 0x70, 0x00, 0xc0, 0x00, 0xfc, 0x00, 0xc0, 0x00, 0x7f, 0xc0, 0xc0, 0x00, 0x0f,
0xc0, 0xc0, 0x00,
0x00, 0xc7, 0x00, 0x00, 0x00, 0xc1, 0x80, 0x00, 0x00, 0xc3, 0x80, 0x00, 0x00,
0xc3, 0x80, 0x00,
0x00, 0xc3, 0x00, 0x00, 0x00, 0x86, 0x00, 0x00, 0x01, 0x9c, 0x00, 0x00, 0x01,
0x9c, 0x00, 0x00,
0x01, 0x8e, 0x00, 0x00, 0x01, 0x9c, 0x00, 0x00, 0x01, 0x9c, 0x00, 0x00, 0x01,
0x9c, 0x00, 0x00,
 0x01, 0xdc, 0x00, 0x00, 0x01,0xdc, 0x00, 0x00, 0x01, 0xde, 0x00, 0x00, 0x01,
0xfe, 0x00, 0x00,
0x01, 0xfe, 0x30, 0x00, 0x01, 0xfe, 0x78, 0x00, 0x03, 0xfe, 0xc0, 0x00, 0x03,
0xff, 0x80, 0x00,
 0x03, 0xff, 0x00, 0x00, 0x07, 0xff, 0x80, 0x00, 0x07, 0xfd, 0xfe, 0x00, 0x07,
0xfc, 0x07, 0x00,
 0x07, 0xfc, 0x03, 0x00, 0x07, 0xfc, 0x0e, 0x00, 0x03, 0xfc, 0x1c, 0x00, 0x03,
0xfc, 0x38, 0x00,
0x03, 0xfc, 0x70, 0x00, 0x03, 0xfc, 0xe0, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x01,
0xff, 0xc0, 0x00,
 0x01, 0xff, 0x80, 0x00, 0x03, 0xff, 0x80, 0x00, 0x07, 0xff, 0x00, 0x00, 0x0f,
0x98, 0x00, 0x00,
0x0f, 0x30, 0x00, 0x00, 0x1e, 0x3c, 0x00, 0x00, 0x3c, 0x7f, 0x00, 0x00, 0x38,
0x7f, 0x80, 0x00,
 0x70, 0x7f, 0xc0, 0x00, 0x63, 0xff, 0xe0, 0x00, 0x61, 0xff, 0xe0, 0x00, 0xe0,
0x3f, 0xf0, 0x00,
 0xe0, 0x1f, 0xf0, 0x00, 0xe0, 0x1f, 0xf0, 0x00, 0xf0, 0x0f, 0xf0, 0x00, 0x7f,
0xf7, 0xf0, 0x00,
 0x01, 0xf3, 0xf0, 0x00, 0x00, 0x31, 0xe0, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00,
0x0f, 0x04, 0x00,
0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00, 0x00, 0x20, 0x00,
0x00, 0x00, 0x20,
 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00
};

void* font = GLUT_BITMAP_8_BY_13;

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitWindowSize(400, 400);
	glutInitWindowPosition(100, 0);
	glutCreateWindow("Bitmap Rendering");
	myInit();
	glutDisplayFunc(myDisplayCallback);
	glutMainLoop();
	return 1;
}


void myInit()
{
	glClearColor(1, 1, 1, 0);
	gluOrtho2D(-200, 200, -200, 200);
}


void myDisplayCallback()
{
	glClear(GL_COLOR_BUFFER_BIT);
	drawAxis();
	displayBitmap();
	glFlush();
}

void drawAxis() {

	glColor3f(0, 0, 0);
	glBegin(GL_POINTS);

	for (int x = -150; x <= 150; x++) {
		glVertex2i(x, 0);
	}

	for (int y = -150; y <= 150; y++) {
		glVertex2i(0, y);
	}
	glEnd();

	glRasterPos2i(-3, 160);
	glutBitmapCharacter(font, 'Y');
	glRasterPos2i(160, -3);
	glutBitmapCharacter(font, 'X');
}

void displayBitmap() {
	glColor3f(1.0, 0.0, 0.0);
	glRasterPos2i(20, 20);
	glBitmap(27, 65, 0, 0, 0, 0, bitmap);
}